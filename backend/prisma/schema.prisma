// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int            @id @default(autoincrement())
  email            String         @unique
  password         String
  name             String
  role             String
  bio              String?         
  skills            Skill[]
  interests  Interest[] @relation("UserInterests")
  connectionsSent  Connection[]   @relation("Sender")
  connectionsReceived Connection[] @relation("Receiver")
  notifications Notification[] @relation("UserNotifications")
}

model Skill {
  id        Int      @id @default(autoincrement())
  name      String
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
}

model Interest {
  id        Int     @id @default(autoincrement())
  name      String  @unique
  users     User[]  @relation("UserInterests")
}

model Connection {
  id        Int    @id @default(autoincrement())
  senderId  Int
  receiverId Int
  sender    User   @relation("Sender", fields: [senderId], references: [id])
  receiver  User   @relation("Receiver", fields: [receiverId], references: [id])
  status    String 
}

model Notification {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      User     @relation("UserNotifications", fields: [userId], references: [id])
  content   String
  read      Boolean  @default(false)
  createdAt DateTime @default(now())
}

